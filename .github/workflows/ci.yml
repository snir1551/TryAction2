name: CI Pipeline

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
      
 
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Check Node.js Version
      run: node --version

    - name: Install Dependencies
      working-directory: backend
      run: npm install

    - name: Run Tests
      working-directory: backend
      run: npm test -- --no-color > test-report.txt

    - name: Upload Test Report Artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-report-${{ matrix.node-version }}
        path: backend/test-report.txt

    - name: Start App on Port 3000
      working-directory: backend
      run: |
        npm start &
        echo "Waiting for server..."
        sleep 5

    - name: Check Service Availability (localhost:3000)
      run: |
        curl --fail http://localhost:3000 || echo "Service check failed on localhost:3000"


    - name: Notify Slack on Success
      if: success()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": " *Job `${{ github.job }}` succeeded!*\n• Repo: `${{ github.repository }}`\n• Branch: `${{ github.ref_name }}`\n• Actor: `${{ github.actor }}`"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Notify Slack on Failure
      if: failure()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": " *Job `${{ github.job }}` failed!*\n• Repo: `${{ github.repository }}`\n• Branch: `${{ github.ref_name }}`\n• Actor: `${{ github.actor }}`"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
